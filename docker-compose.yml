services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-app
    ports:
      - "3001:3001"
    volumes:
      - .:/usr/src/app
    depends_on:
      - db
      - elasticsearch
      - zookeeper
      - kafka
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - DB_PORT=5433
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_NAME=orders
    command: npm run start:dev

  db:
    image: postgres:16.9-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_PORT: 5433
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: orders
    ports:
      - "5433:5433"
    volumes:
      - pgdata:/var/lib/postgresql/data
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.0
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      - default
  
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.9.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
      - zookeeper

volumes:
  pgdata:
  kafka_data:
